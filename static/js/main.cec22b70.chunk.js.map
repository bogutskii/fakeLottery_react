{"version":3,"sources":["Components/Inputs.js","Components/Stats.js","Components/GeneratorRandomNumber.js","App.js","index.js"],"names":["Inputs","props","inputNumbers","usersNumbers","limit","e","key","target","value","substr","length","checkFields","setUsersNumbers","console","log","Object","values","every","el","setIsEnable","className","type","onChange","event","required","onClick","user","sort","a","b","indexOf","map","num","String","comp","i","rand1","Math","floor","random","includes","push","Set","ceil","setWinningNumbers","disabled","isEnable","Stats","userNumbers","winningNumbers","GeneratorRandomNumber","win","App","useState","setUserNumbers","join","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cec22b70.chunk.js","sourcesContent":["import React from \"react\";\n//import \"../src/styles.css\";\n\nconst Inputs = (props) => {\n\n    const generator = () => {\n\n        let user= [...props.usersNumbers];\n       user.sort((a,b)=>{\n           if(user.indexOf(a) == 5)return 0\n           else return a - b\n       })\n        props.setUsersNumbers(user.map(num => String(num).length < 2 ? '0'+num : num))\n\n\n        let comp = [];\n        for (let i = 0; i < 25; i++) {\n            let rand1 = Math.floor(Math.random() * 68 + 1);\n            if (!comp.includes(rand1)) {\n                comp.push(rand1);\n            }\n        }\n        comp = [...new Set(comp)];\n        comp.length = 5;\n        comp.sort((a, b) => a - b).push(Math.ceil(Math.random() * 24))\n\n        props.setWinningNumbers(comp.map(num => +num < 10 ? '0'+num : num))\n    }\n\n\n    const inputNumbers = [...props.usersNumbers];\n\n    const limit = (e, key) => {\n        inputNumbers[key]= +e.target.value;\n\n        if (e.target.value > (key !== 5 ? 69 : 24) || e.target.value === \"00\") {\n            inputNumbers[key] = +e.target.value.substr(0, 1);\n        } else if (e.target.value.length > 2) {\n            inputNumbers[key] = +e.target.value.substr(0, 2);\n        }\n        checkFields()\n        props.setUsersNumbers(inputNumbers)\n        console.log(e.target.value, key, inputNumbers)\n\n    }\n\n    const checkFields = () => {\n        if (Object.values(inputNumbers).every(el => +el > 0)) {\n            props.setIsEnable(false)\n        } else {\n            props.setIsEnable(true)\n        }\n    }\n\n    return (\n        <div className=\"input-form\">\n            <form>\n                <input value={props.usersNumbers[0]} type=\"number\" className=\"numbox\"\n                       onChange={(event) => limit(event, 0)} required/>\n                <input value={props.usersNumbers[1]} type=\"number\" className=\"numbox\"\n                       onChange={(event) => limit(event, 1)} required/>\n                <input value={props.usersNumbers[2]} type=\"number\" className=\"numbox\"\n                       onChange={(event) => limit(event, 2)} required/>\n                <input value={props.usersNumbers[3]} type=\"number\" className=\"numbox\"\n                       onChange={(event) => limit(event, 3)} required/>\n                <input value={props.usersNumbers[4]} type=\"number\" className=\"numbox\"\n                       onChange={(event) => limit(event, 4)} required/>\n                <input value={props.usersNumbers[5]} type=\"number\" className=\"specialNumBox\"\n                       onChange={(event) => limit(event, 5)} required/>\n            </form>\n            <button className=\"btn btn1\" onClick={generator} disabled={props.isEnable} >PLAY</button>\n            <button className=\"btn btn5\" disabled={props.isEnable} >Clear</button>\n        </div>\n    );\n};\nexport default Inputs;\n","import React from 'react';\n\n\nconst Stats = (props) => {\n\n    return (\n        <div>\n            <h1>Stats</h1>\n            <table className=\"center\">\n                <tbody>\n                <tr>\n                    <td>User number</td>\n                    <td>{props.userNumbers.map((num, i) => i !== 5 ?\n                        <span className=\"white-cir\">{num}</span>\n                        :\n                        <span className=\"red-cir\">{num}</span>\n                    )\n\n                    }</td>\n                </tr>\n\n                <tr>\n                    <td>Win number</td>\n                    <td>{props.winningNumbers.map((num, i) => i !== 5 ?\n                        <span className=\"white-cir\">{num}</span>\n                        :\n                        <span className=\"red-cir\">{num}</span>\n                    )}</td>\n                </tr>\n                <tr>\n                    <td>Same number</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td>total win</td>\n                    <td>0</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default Stats;","import React from 'react';\n\n\n\nconst GeneratorRandomNumber = (props) => {\n    const generator = () => {\n        let win = [];\n\n        for (let i = 0; i < 25; i++) {\n            let rand1 = Math.floor(Math.random() * 68 + 1);\n            if (!win.includes(rand1)) {\n                win.push(rand1);\n            }\n        }\n        win = [...new Set(win)];\n        win.length = 5;\n        win.sort((a, b) => a - b).push(Math.ceil(Math.random() * 24))\n\n        props.setUsersNumbers(win.map(num => +num < 10 ? '0'+num : num))\n        props.setIsEnable(false)\n    }\n\n\n    return (\n        <div>\n            <button className=\"btn btn3\" onClick={generator}>Random</button>\n\n        </div>\n\n    )\n}\nexport default GeneratorRandomNumber;","import React, {useState} from \"react\";\nimport \"./styles.css\";\nimport Inputs from \"./Components/Inputs\";\nimport Stats from \"./Components/Stats\"\nimport GeneratorRandomNumber from './Components/GeneratorRandomNumber'\n\nexport default function App() {\n    const [isEnable, setIsEnable] = useState(true)\n    const [userNumbers, setUserNumbers] = useState(['', '', '', '', '', ''])\n    const [winningNumbers, setWinningNumbers] = useState([])\n    const [sameNumber, setSameNumber] = useState([])\n    return (\n        <div className=\"App\">\n            <h1 className=\"h1-main\">\n                lottery simulator\n            </h1>\n\n            <Inputs usersNumbers={userNumbers}\n                    setUsersNumbers={(usersNumbers) => setUserNumbers(usersNumbers)}\n                    isEnable={isEnable}\n                    setIsEnable={(isEnable) => setIsEnable(isEnable)}\n                    winningNumbers={winningNumbers}\n                    setWinningNumbers={(winningNumbers) => setWinningNumbers(winningNumbers)}\n            />\n\n            <GeneratorRandomNumber setIsEnable={(isEnable) => setIsEnable(isEnable)}\n                                   setUsersNumbers={(usersNumbers) => setUserNumbers(usersNumbers)}\n\n            />\n            {userNumbers.join(' ')}\n            <Stats userNumbers={userNumbers}\n                   winningNumbers={winningNumbers}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}