{"version":3,"sources":["Components/Inputs.js","Components/Stats.js","Components/GeneratorRandomNumber.js","Components/Footer.js","App.js","index.js"],"names":["Inputs","props","sameNum","arr1","arr2","setSameNumber","map","num","i","includes","inputNumbers","usersNumbers","limit","e","key","target","value","substr","length","checkFields","setUsersNumbers","console","log","Object","values","every","el","setIsEnable","className","type","onChange","event","required","onClick","user","sort","a","b","indexOf","String","comp","rand1","Math","floor","random","push","Set","ceil","setWinningNumbers","setCounter","counter","playedTimes","disabled","isEnable","Stats","userNumbers","winningNumbers","sameNumber","slice","GeneratorRandomNumber","win","Footer","App","useState","setUserNumbers","credits","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0629f69c.chunk.js","sourcesContent":["import React from \"react\";\n//import \"../src/styles.css\";\n\nconst Inputs = (props) => {\n\n\n        const generator = () => {\n\n            let user = [...props.usersNumbers];\n            user.sort((a, b) => {\n                if (user.indexOf(a) === 5) return 0\n                else return a - b\n            })\n            props.setUsersNumbers(user.map(num => String(num).length < 2 ? '0' + num : num))\n\n\n            let comp = [];\n            for (let i = 0; i < 25; i++) {\n                let rand1 = Math.floor(Math.random() * 68 + 1);\n                if (!comp.includes(rand1)) {\n                    comp.push(rand1);\n                }\n            }\n            comp = [...new Set(comp)];\n            comp.length = 5;\n            comp.sort((a, b) => a - b).push(Math.ceil(Math.random() * 24))\n\n            props.setWinningNumbers(comp.map(num => +num < 10 ? '0' + num : num))\n            sameNum(user, comp);\n\n            props.setCounter({...props.counter, playedTimes: props.counter.playedTimes+1})\n\n        }\n\n        const sameNum = (arr1, arr2) => {\n            props.setSameNumber(arr1.map((num, i) => arr2.includes(num) && i !== 5 ? num :\n                arr2.includes(num) && i === 5 ? '*' + num + '*' : ''))\n        }\n        const inputNumbers = [...props.usersNumbers];\n\n        const limit = (e, key) => {\n            inputNumbers[key] = +e.target.value;\n\n            if (e.target.value > (key !== 5 ? 69 : 24) || e.target.value === \"00\") {\n                inputNumbers[key] = +e.target.value.substr(0, 1);\n            } else if (e.target.value.length > 2) {\n                inputNumbers[key] = +e.target.value.substr(0, 2);\n            }\n            checkFields()\n            props.setUsersNumbers(inputNumbers)\n            console.log(e.target.value, key, inputNumbers)\n\n        }\n\n        const checkFields = () => {\n            if (Object.values(inputNumbers).every(el => +el > 0)) {\n                props.setIsEnable(false)\n            } else {\n                props.setIsEnable(true)\n            }\n        }\n\n        return (\n            <div className=\"input-form\">\n                <form>\n                    <input value={props.usersNumbers[0]} type=\"number\" className=\"numbox\"\n                           onChange={(event) => limit(event, 0)} required/>\n                    <input value={props.usersNumbers[1]} type=\"number\" className=\"numbox\"\n                           onChange={(event) => limit(event, 1)} required/>\n                    <input value={props.usersNumbers[2]} type=\"number\" className=\"numbox\"\n                           onChange={(event) => limit(event, 2)} required/>\n                    <input value={props.usersNumbers[3]} type=\"number\" className=\"numbox\"\n                           onChange={(event) => limit(event, 3)} required/>\n                    <input value={props.usersNumbers[4]} type=\"number\" className=\"numbox\"\n                           onChange={(event) => limit(event, 4)} required/>\n                    <input value={props.usersNumbers[5]} type=\"number\" className=\"specialNumBox\"\n                           onChange={(event) => limit(event, 5)} required/>\n                </form>\n                <button className=\"btn btn1\" onClick={generator} disabled={props.isEnable}>PLAY</button>\n                <button className=\"btn btn5\" disabled={props.isEnable}>Clear</button>\n            </div>\n        );\n    }\n;\nexport default Inputs;\n","import React from 'react';\n\n\nconst Stats = (props) => {\n\n    // const filterSameNumber = () => {\n    //     props.setSameNumber(props.usersNumbers.filter(el => props.winningNumbers.includes(el)))\n    //     console.log('yes')\n    // }\n\n\n    return (\n        <div>\n            <h1>Stats</h1>\n            <table className=\"center\">\n                <tbody>\n                <tr>\n                    <td>User number</td>\n                    <td>{props.userNumbers.map((num, i) => i !== 5 ?\n                        <span\n                            className={`${!num ? '' : props.winningNumbers.includes(num) ? 'white-cir' : 'gray-cir'}`}>{num}</span>\n                        :\n                        <span\n                            className={`${!num ? '' : props.winningNumbers[5] === props.userNumbers[5] ? 'redWin-cir' : 'red-cir'}`}>{num}</span>\n                    )\n\n                    }</td>\n                </tr>\n\n                <tr>\n                    <td>Win number</td>\n                    <td>{props.winningNumbers.map((num, i) => i !== 5 ?\n                        <span className=\"white-cir\">{num}</span>\n                        :\n                        <span className=\"red-cir\">{num}</span>\n                    )}</td>\n                </tr>\n                <tr>\n                    <td>Same number</td>\n                    <td>{props.sameNumber\n\n\n\n                        .map(num => !num ? '' : String(num).length <= 2 ?  <span className=\"white-cir\">{num}</span>\n                            :\n                            <span className=\"red-cir\">{String(num).slice(1,-1)}</span>\n                        )\n                    }\n                    </td>\n                </tr>\n                <tr>\n                    <td>total played</td>\n                    <td>{props.counter.playedTimes}  <button className=\"btn5-mini\">reset</button></td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n)\n}\nexport default Stats;","import React from 'react';\n\n\nconst GeneratorRandomNumber = (props) => {\n    const generator = () => {\n        let win = [];\n\n        for (let i = 0; i < 25; i++) {\n            let rand1 = Math.floor(Math.random() * 68 + 1);\n            if (!win.includes(rand1)) {\n                win.push(rand1);\n            }\n        }\n        win = [...new Set(win)];\n        win.length = 5;\n        win.sort((a, b) => a - b).push(Math.ceil(Math.random() * 24))\n\n        props.setUsersNumbers(win.map(num => +num < 10 ? '0' + num : num))\n        props.setIsEnable(false)\n    }\n\n\n    return (\n        <div>\n            <button className=\"btn btn3\" onClick={generator}>Random</button>\n\n        </div>\n\n    )\n}\nexport default GeneratorRandomNumber;","import React from 'react';\n\n\n\nconst Footer = ()=> {\n  return <div className=\"footer\">\n      <div >\n<p >\n    Is not a lottery, it is just a simulator showing the generation of random values and matches.\n\n    Here there is no real money or any payments, everything is entertainment in nature and there can be no property and monetary claims.\n\n    Everything works as it works and if it doesn’t work we will probably never fix it, but you can write it and with a low probability we will fix it.\n    A random number generator is a built-in pseudo-random value method from a JavaScript\n</p>\n      </div>\n  </div>\n\n}\n\nexport default Footer;","import React, {useState} from \"react\";\nimport \"./styles.css\";\nimport Inputs from \"./Components/Inputs\";\nimport Stats from \"./Components/Stats\"\nimport GeneratorRandomNumber from './Components/GeneratorRandomNumber'\nimport Footer from './Components/Footer'\n\n\nexport default function App() {\n    const [isEnable, setIsEnable] = useState(true)\n    const [userNumbers, setUserNumbers] = useState(['', '', '', '', '', ''])\n    const [winningNumbers, setWinningNumbers] = useState([])\n    const [sameNumber, setSameNumber] = useState([])\n    const [counter, setCounter] = useState({\n        playedTimes:0,\n        credits : 0\n    })\n\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"h1-main\">\n                lottery simulator\n            </h1>\n\n            <Inputs usersNumbers={userNumbers}\n                    setUsersNumbers={(usersNumbers) => setUserNumbers(usersNumbers)}\n                    isEnable={isEnable}\n                    setIsEnable={(isEnable) => setIsEnable(isEnable)}\n                    winningNumbers={winningNumbers}\n                    setWinningNumbers={(winningNumbers) => setWinningNumbers(winningNumbers)}\n                    setSameNumber={(sameNumber) => setSameNumber(sameNumber)}\n                    counter={counter}\n                    setCounter={(counter) => setCounter(counter)}\n\n            />\n\n            <GeneratorRandomNumber setIsEnable={(isEnable) => setIsEnable(isEnable)}\n                                   setUsersNumbers={(usersNumbers) => setUserNumbers(usersNumbers)}\n\n            />\n            <Stats userNumbers={userNumbers}\n                   winningNumbers={winningNumbers}\n                   sameNumber={sameNumber}\n                   setSameNumber={(sameNumber) => setSameNumber(sameNumber)}\n                   counter={counter}\n            />\n\n            <Footer/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}